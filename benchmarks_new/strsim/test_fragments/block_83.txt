a = WeightedLevenshtein(default_substitution_cost, default_insertion_cost, default_deletion_cost)
    s0 = ""
    s1 = ""
    s2 = input_shanghai
    s3 = input_shanghai_city
    assert_equal(a.distance(s0, s1), 0.0)
    assert_equal(a.distance(s0, s2), 2)
    assert_equal(a.distance(s0, s3), 3)
    assert_equal(a.distance(s1, s2), 2)
    assert_equal(a.distance(s1, s3), 3)
    assert_equal(a.distance(s2, s3), 1)