    console.log("--- rgb_to_yiq ---");
    var tmp = rgb_to_yiq(0.5, 0.5, 0.5);
    var _const_var = [0.49999999999999994, 2.6090241078691177e-17, 4.940492459581946e-17];
    assert_iter_almost_equal(tmp, _const_var);
    tmp = rgb_to_yiq(0, 0.5, 1);
    var _const_var = [0.40499999999999997, -0.46035, 0.04954999999999998];
    assert_iter_almost_equal(tmp, _const_var);
    tmp = rgb_to_yiq(1, 0, 0);
    var _const_var = [0.3, 0.599, 0.21299999999999997];
    assert_iter_almost_equal(tmp, _const_var);
    tmp = rgb_to_yiq(0, 0, 0);
    var _const_var = [0.0, 0.0, 0.0];
    assert_iter_almost_equal(tmp, _const_var);
    tmp = rgb_to_yiq(1, 0.1, 0.3);
    var _const_var = [0.392, 0.47476, 0.25411999999999996];
    assert_iter_almost_equal(tmp, _const_var);
    console.log("--- yiq_to_rgb ---");
    tmp = yiq_to_rgb(1.0, 0.5957, 0.0);
    var _const_var = [1.0, 0.8363089990996986, 0.33963972286374133];
    assert_iter_almost_equal(tmp, _const_var);
    tmp = yiq_to_rgb(0.0, -0.5957, -0.5226);
    var _const_var = [0.0, 0.49590315888362624, 0.0];
    assert_iter_almost_equal(tmp, _const_var);
    tmp = yiq_to_rgb(0.8, 0.1, 0.2);
    var _const_var = [1.0, 0.6453830195326262, 1.0];
    assert_iter_almost_equal(tmp, _const_var);
    tmp = yiq_to_rgb(0.0, 0.0, 0.0);
    var _const_var = [0.0, 0.0, 0.0];
    assert_iter_almost_equal(tmp, _const_var);
    tmp = yiq_to_rgb(1.0, 0.0, 0.0);
    var _const_var = [1.0, 1.0, 1.0];
    assert_iter_almost_equal(tmp, _const_var);
    tmp = yiq_to_rgb(0.5, 0.0, 0.0);
    var _const_var = [0.5, 0.5, 0.5];
    assert_iter_almost_equal(tmp, _const_var);
    console.log("--- rgb_to_hls ---");
    tmp = rgb_to_hls(0.5, 0.5, 0.5);
    var _const_var = [0.0, 0.5, 0.0];
    assert_iter_almost_equal(tmp, _const_var);
    tmp = rgb_to_hls(0, 0.5, 1);
    var _const_var = [0.5833333333333334, 0.5, 1.0];
    assert_iter_almost_equal(tmp, _const_var);
    tmp = rgb_to_hls(1, 0, 0);
    var _const_var = [0.0, 0.5, 1.0];
    assert_iter_almost_equal(tmp, _const_var);
    tmp = rgb_to_hls(0, 0, 0);
    var _const_var = [0.0, 0.0, 0.0];
    assert_iter_almost_equal(tmp, _const_var);
    tmp = rgb_to_hls(1, 0.1, 0.3);
    var _const_var = [0.9629629629629629, 0.55, 1.0000000000000002];
    assert_iter_almost_equal(tmp, _const_var);
    console.log("--- hls_to_rgb ---");
    tmp = hls_to_rgb(0.5, 0.5, 0.5);
    var _const_var = [0.25, 0.7499999999999999, 0.75];
    assert_iter_almost_equal(tmp, _const_var);
    tmp = hls_to_rgb(0, 0.5, 1);
    var _const_var = [1.0, 0.0, 0.0];
    assert_iter_almost_equal(tmp, _const_var);
    tmp = hls_to_rgb(1, 0, 0);
    var _const_var = [0, 0, 0];
    assert_iter_almost_equal(tmp, _const_var);
    tmp = hls_to_rgb(0, 0, 0);
    var _const_var = [0, 0, 0];
    assert_iter_almost_equal(tmp, _const_var);
    tmp = hls_to_rgb(1, 0.1, 0.3);
    var _const_var = [0.13, 0.07, 0.07];
    assert_iter_almost_equal(tmp, _const_var);
    console.log("--- rgb_to_hsv ---");
    tmp = rgb_to_hsv(0.5, 0.5, 0.5);
    var _const_var = [0.0, 0.0, 0.5];
    assert_iter_almost_equal(tmp, _const_var);
    tmp = rgb_to_hsv(0, 0.5, 1);
    var _const_var = [0.5833333333333334, 1.0, 1];
    assert_iter_almost_equal(tmp, _const_var);
    tmp = rgb_to_hsv(1, 0, 0);
    var _const_var = [0.0, 1.0, 1];
    assert_iter_almost_equal(tmp, _const_var);
    tmp = rgb_to_hsv(0, 0, 0);
    var _const_var = [0.0, 0.0, 0];
    assert_iter_almost_equal(tmp, _const_var);
    tmp = rgb_to_hsv(1, 0.1, 0.3);
    var _const_var = [0.9629629629629629, 0.9, 1];
    assert_iter_almost_equal(tmp, _const_var);
    console.log("--- hsv_to_rgb ---");
    tmp = hsv_to_rgb(0.5, 0.5, 0.5);
    var _const_var = [0.25, 0.5, 0.5];
    assert_iter_almost_equal(tmp, _const_var);
    tmp = hsv_to_rgb(0, 0.5, 1);
    var _const_var = [1, 0.5, 0.5];
    assert_iter_almost_equal(tmp, _const_var);
    tmp = hsv_to_rgb(1, 0, 0);
    var _const_var = [0, 0, 0];
    assert_iter_almost_equal(tmp, _const_var);
    tmp = hsv_to_rgb(0, 0, 0);
    var _const_var = [0, 0, 0];
    assert_iter_almost_equal(tmp, _const_var);
    tmp = hsv_to_rgb(1, 0.1, 0.3);
    var _const_var = [0.3, 0.27, 0.27];
    assert_iter_almost_equal(tmp, _const_var);
