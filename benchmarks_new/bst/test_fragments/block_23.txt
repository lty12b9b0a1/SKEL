t = _get_binary_search_tree();

    t.remove(3);

    if (t.root === null) throw new Error('Assertion failed');
    if (t.root.left === null) throw new Error('Assertion failed');
    if (t.root.left.left === null) throw new Error('Assertion failed');
    if (t.root.left.right === null) throw new Error('Assertion failed');
    if (t.root.left.right.left === null) throw new Error('Assertion failed');
    if (t.root.left.right.right === null) throw new Error('Assertion failed');
    if (t.root.left.label !== 4) throw new Error('Assertion failed');
    if (t.root.left.right.label !== 6) throw new Error('Assertion failed');
    if (t.root.left.left.label !== 1) throw new Error('Assertion failed');
    if (t.root.left.right.right.label !== 7) throw new Error('Assertion failed');
    if (t.root.left.right.left.label !== 5) throw new Error('Assertion failed');
    if (t.root.left.parent !== t.root) throw new Error('Assertion failed');
    if (t.root.left.right.parent !== t.root.left) throw new Error('Assertion failed');
    if (t.root.left.left.parent !== t.root.left) throw new Error('Assertion failed');
    if (t.root.left.right.left.parent !== t.root.left.right) throw new Error('Assertion failed');